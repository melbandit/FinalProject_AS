@import 'bootstrap_variables';
@import "node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins";
//
// Dropdown menus
// --------------------------------------------------


// Dropdown arrow/caret
.caret { //*
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top:   $caret-width-base dashed;
  border-top:   $caret-width-base solid \9; // IE8
  border-right: $caret-width-base solid transparent;
  border-left:  $caret-width-base solid transparent;
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: none;
    float: left;
    min-width: 311px;
    padding: 5px 0;
    margin: -2px 0 0;
    list-style: none;
    font-size: 14px;
    text-align: center;
    background-color: #111;
    /* border: 1px solid #ccc; */   
    /* border: 1px solid rgba(0, 0, 0, 0.15); */
    /* border-radius: 4px; */
    /* box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175); */
    background-clip: padding-box;

  // Aligns the dropdown menu to right
  //
  // Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  // .divider {
  //   @include nav-divider($dropdown-divider-bg);
  // }

  // Links within the dropdown menu
  > li > a {
    display: block;
    padding: 7px 40px; //*
    clear: both;
    font-weight: normal;
    line-height: $line-height-base;
    color: $dropdown-link-color;
    text-decoration: none;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
  }
}

// Hover/Focus state
.dropdown-menu > li > a {
  &:hover,
  &:focus {
    text-decoration: none;
    color: $dropdown-link-hover-color;
    background-color: $dropdown-link-hover-bg;
  }
}

// Active state
.dropdown-menu > .active > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-link-active-color;
    text-decoration: none;
    outline: 0;
    background-color: $dropdown-link-active-bg;
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.dropdown-menu > .disabled > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-link-disabled-color;
  }

  // Nuke hover/focus effects
  &:hover,
  &:focus {
    text-decoration: none;
    background-color: transparent;
    background-image: none; // Remove CSS gradient
    @include reset-filter;
    cursor: $cursor-disabled;
  }
}

// Open state for the dropdown
.open {
  // Show the menu
  > .dropdown-menu {
    display: block;
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  left: auto; // Reset the default from `.dropdown-menu`
  right: 0;
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  left: 0;
  right: auto;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: 3px 15px;
  font-size: $font-size-small;
  line-height: $line-height-base;
  color: $dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: ($zindex-dropdown - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
    border-top: 0;
    border-bottom: $caret-width-base dashed;
    border-bottom: $caret-width-base solid \9; // IE8
    content: "";
  }
  // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-bottom: 2px;
  }
}


// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media (min-width: $grid-float-breakpoint) {
  .navbar-right {
    .dropdown-menu {
      right: 0; left: auto;
    }
    // Necessary for overrides of the default right aligned menu.
    // Will remove come v4 in all likelihood.
    .dropdown-menu-left {
      left: 0; right: auto;
    }
  }
}


//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  @include user-select(none);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: $btn-default-hover-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.65);
    @include box-shadow(none);
  }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}
// .btn-primary {
//   @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
// }
// // Success appears as green
// .btn-success {
//   @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
// }
// // Info appears as blue-green
// .btn-info {
//   @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
// }
// // Warning appears as orange
// .btn-warning {
//   @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
// }
// // Danger and error appear as red
// .btn-danger {
//   @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
// }


// Link buttons
// -------------------------

// Make a button look and behave like a link
// .btn-link {
//   color: $link-color;
//   font-weight: normal;
//   border-radius: 0;

//   &,
//   &:active,
//   &.active,
//   &[disabled],
//   fieldset[disabled] & {
//     background-color: transparent;
//     @include box-shadow(none);
//   }
//   &,
//   &:hover,
//   &:focus,
//   &:active {
//     border-color: transparent;
//   }
//   &:hover,
//   &:focus {
//     color: $link-hover-color;
//     text-decoration: $link-hover-decoration;
//     background-color: transparent;
//   }
//   &[disabled],
//   fieldset[disabled] & {
//     &:hover,
//     &:focus {
//       color: $btn-link-disabled-color;
//       text-decoration: none;
//     }
//   }
// }


// Button Sizes
// --------------------------------------------------

// .btn-lg {
//   // line-height: ensure even-numbered height of button next to large input
//   @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
// }
// .btn-sm {
//   // line-height: ensure proper height of button next to small input
//   @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
// }
// .btn-xs {
//   @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
// }


// // Block button
// // --------------------------------------------------

// .btn-block {
//   display: block;
//   width: 100%;
// }

// // Vertically space out multiple block buttons
// .btn-block + .btn-block {
//   margin-top: 5px;
// }

// // Specificity overrides
// input[type="submit"],
// input[type="reset"],
// input[type="button"] {
//   &.btn-block {
//     width: 100%;
//   }
// }




